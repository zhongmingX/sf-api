<?php

namespace api\controllers;
use common\components\CommonFun;
use common\components\Notice;
use common\extend\OSS\Common;
use common\models\ExchangePoint;
use common\models\Members;
use common\models\MerchantsAccount;
use common\models\MerchantsFinances;
use common\models\Recommends;
use common\models\WeixinFans;
use common\models\WxKeyWords;
use common\models\WxKeyWordsItems;
use yii\web\Controller;
use common\models\Config;
use Yii;
use common\models\MembersCurrency;
use common\models\MembersFinances;
use common\models\MerchantsRemind;


class WeixinController extends Controller {
    public $weixin;
    public $openid;
    public $unionid;
    public $msgType;
    public $content;
    public $event;
    public $sysConfig;
    public $is_new = false;
    public $memberInfo;

    public function init() {
        $this->weixin = \Yii::$app->wechat;

        $this->sysConfig = Config::getConfigs('basic'); //配置
        parent::init(); // TODO: Change the autogenerated stub
    }

    //返回JScofnig
    public function actionJsConfig($url, $date=''){
        if($date == ''){
            $date = time();
        }
        $res = $this->weixin->jsApiConfig(['url'=>$url, 'timestamp'=>$date]);
        return json_encode($res);
    }

    //接入
    public function actionIndex(){
        $signature = CommonFun::getParams('signature');
        $timestamp = CommonFun::getParams('timestamp');
        $nonce = CommonFun::getParams('nonce');
        $echostr = CommonFun::getParams('echostr');

        if($this->weixin->checkSignature($signature, $timestamp, $nonce)) {
            echo $echostr;
        }
         
        $data = $this->weixin->parseRequestData();
        if(!$data) return false;
        CommonFun::log($data,'', 'weixin');
        
        
//        $data = ' {"ToUserName":"gh_0f63ca881741","FromUserName":"ooS7e0lpKC7DlszwH1iaB0F2hfLM","CreateTime":"1539347207","MsgType":"event","Event":"subscribe","EventKey":"qrscene_recommend:merchants_1003302","Ticket":"gQGZ8TwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAyMS1aazlNeEtmdWkxMDAwMGcwN1MAAgSYG8BbAwQAAAAA"}';
//        $data = json_decode($data, true);
//        CommonFun::pp($data);
        
        
        $this->msgType = $data['MsgType'];
        $this->openid = $data['FromUserName'];

        //查看用户是否存在
        $wxFans = WeixinFans::getWeixinFans($this->openid);
        if(!$wxFans){
            //如果不存在 添加新用户
            $this->memberInfo = $this->weixin->getMemberInfo($this->openid);
//            CommonFun::pp($this->memberInfo);
            $memberid = 0;
            //验证unionid是否存在
            if(isset($this->memberInfo['unionid'])){
                $wxTmp = WeixinFans::getUnionid($this->memberInfo['unionid']);
                if($wxTmp){
                    $memberid = $wxTmp->member_id;
                }
            }

            //用户不存在时
            $this->memberInfo['nickname'] = CommonFun::filter_Emoji($this->memberInfo['nickname']);
            if($memberid == 0){
                $this->is_new = true; //新添加帐号

                $member = new Members();
                $member->nickname = $this->memberInfo['nickname'];
                $member->sex = $this->memberInfo['sex'];
                $member->status = 1;
                $member->ctime = time();
                $member->save();

                //用户财务表
                $memberFinance = new MembersFinances();
                $memberFinance->member_id = $member->id;
                $memberFinance->save();


                $memberid = $member->id;

                //注册钩子，给用户发送省币
                MembersCurrency::memberRegister($member->id);
            }

            //更新fans表
            //不存在写入
            $wxFans = new WeixinFans();
            $wxFans->subscribe = 1;
            $wxFans->openid = $this->memberInfo['openid'];
            $wxFans->unionid = $this->memberInfo['unionid'];
            $wxFans->nickname = $this->memberInfo['nickname'];
            $wxFans->sex = $this->memberInfo['sex'];
            $wxFans->city = $this->memberInfo['city'];
            $wxFans->province = $this->memberInfo['province'];
            $wxFans->language = $this->memberInfo['language'];
            $wxFans->country = $this->memberInfo['country'];
            $wxFans->headimgurl = $this->memberInfo['headimgurl'];
            $wxFans->is_mini = 0; //微信
            if($memberid > 0){
                $wxFans->member_id = $memberid;
            }
            $wxFans->subscribe_time = time();
            $wxFans->save();
        }else{ //openid过来的用户 记录unionid
            if ($wxFans->unionid == ''){
                $memberInfo = $this->weixin->getMemberInfo($this->openid);
                $wxFans->unionid = $memberInfo['unionid'];
                $wxFans->save();
            }

        }
//        CommonFun::pp($wxFans);

        //开始事件
        if($this->msgType == 'event'){
            $this->event = $data['Event'];

            if($this->event == 'unsubscribe'){
                $wxFans->subscribe = 0;
                $wxFans->update_time = time();
                $wxFans->save();
                MerchantsRemind::add($wxFans,0,false);
                exit;//直接返回不处理后面
            }

            $qrscene = false;
            switch ($this->event){
                case 'subscribe':
                    //如果已经取消关注，处理成关注
                    if($wxFans && $wxFans->subscribe == 0){
                        $wxFans->subscribe = 1;
                        $wxFans->save();

                        $this->content = '重新关注';
                    }

                    if($this->is_new){
                        $this->content = '关注';
                    }

                    if(isset($data['EventKey'])){
                        $qrscene = substr($data['EventKey'], 8, strlen($data['EventKey'])-1);
                    }

                    break;
                case 'SCAN':
                    $qrscene = $data['EventKey'];
                    if($this->is_new == true){
                        $this->content = '关注';
                    }else{
                        $this->content = '扫码';
                    }
                    break;
                case 'TEMPLATESENDJOBFINISH':
                    exit;
                    break;
                case 'CLICK':
                    $this->content = urldecode($data['EventKey']);
                    break;
                case 'VIEW': //这里可以打点数据
                    exit; //直接退出
                    break;
                case 'view_miniprogram':
                    exit;
                    break;
                case 'LOCATION': //上报位置
                    $redis = Yii::$app->redis;
                    $redis->select(2); //2表
                    $tmp['latitude'] = $data['Latitude'];
                    $tmp['longitude'] = $data['Longitude'];
                    $tmp['precision'] = $data['Precision'];
                    $redis->set('location:'.$this->openid, json_encode($tmp));
                    $redis->expire('location:'.$this->openid, 7200);
                    exit;
                    break;
                default:
                    break;
            }

            //有场景过来
            if($qrscene){
                $qrsceneArray = explode(':', $qrscene);
                $category = $qrsceneArray[0];
                if($category == 'recommend'){ //推荐处理
                    $recommend = explode('_', $qrsceneArray[1]);
                    $recommend_type = $recommend[0];
                    $recommend_id = $recommend[1];

                    //用户不能推荐自己
                    if($recommend_id == $wxFans->member_id){
                        $this->weixin->sendText($this->openid, '您不能推荐自己！');
                        exit;
                    }
                    //异步处理
                    //查询推荐商家或者用户是否存在
                    $recommendExist = false;
                    if($recommend_type == 'merchants'){
                        Notice::submitQrcord($recommend_id, $this->openid);
                        if($this->is_new){
                            Recommends::record(Recommends::$TYPES_KEY[$recommend_type], $recommend_id, $wxFans->member_id);
                        }
                        exit;

//                        $recommendMerchant = MerchantsAccount::findOne($recommend_id);
//                        if($recommendMerchant){
//                            $recommendExist = true;
//                        }
//                        //调出商家信息，发送给用户
//                        if($recommendMerchant){
//                            $address = '';
//                            if($recommendMerchant->extends->address){
//                                $tmp = explode(',', $recommendMerchant->extends->address);
//                                unset($tmp[0]);
//                                unset($tmp[1]);
//                                $address = join('', $tmp);
//                            }
//
//                            $article[] = [
//                                'title' => $recommendMerchant->name.' - (付款得省币)',
//                                'description' => $address,
//                                'url' => "https://weixin.shenglife.cn/payment/checkOut/".$recommendMerchant->id,
//                                'picurl' => ($recommendMerchant->extends->logo)?$this->sysConfig['oss_host'].$recommendMerchant->extends->logo:''
//                            ];
////                            if(!in_array($recommend_id, ['1003346']) ){
////                                $article[] = [
////                                    'title' => '快捷结账: 立即支付得省币',
////                                    'url' => "https://weixin.shenglife.cn/payment/checkOut/".$recommendMerchant->id,
////                                    'picurl' => $this->sysConfig['oss_host'].'/wxlistpay2.png'
////                                ];
////                            }
////                            CommonFun::log($article, '', 'test');
////                            //查询是否绑定兑换点
////                            $expoint = ExchangePoint::findOne(['merchants_id'=>$recommend_id]);
////                            if($expoint){
////                                $point_url = 'https://weixin.shenglife.cn/offline/'.$expoint->id;
////                            }else{
////                                $point_url = 'https://weixin.shenglife.cn/exchangeindex';
////                            }
////
////                            if($this->event == 'SCAN'){
//////                                $this->weixin->sendText($this->openid, '欢迎光临:'.$recommendMerchant->name);
////                                $point_title = '免费好物等你兑回家';
////                            }else{
//////                                $this->weixin->sendText($this->openid, '您已经关注商家:'.$recommendMerchant->name);
////                                $point_title = '亲,恭喜您获得20省币,免费兑换';
////                            }
////                            $getCoin = [
////                                'title' => $point_title,
////                                'url' => $point_url,
////                                'picurl' => $this->sysConfig['oss_host'].'/wxlistcoin.png'
////                            ];
////                            $article[] = $getCoin;
//
////                            CommonFun::pp($article);
////                            $this->weixin->sendNews($this->openid, $article);
//                            if($this->is_new){
//                                Recommends::record(Recommends::$TYPES_KEY[$recommend_type], $recommend_id, $wxFans->member_id);
//                            }
//                            exit;
//                        }
                    }else{
                        $recommendMember = WeixinFans::findOne(['member_id'=>$recommend_id]);
                        if($recommendMember){
                            if($this->is_new){
                                $reTxt = "恭喜:{$recommendMember->nickname} ,您已被会员\"{$wxFans['nickname']}\"成功关注 \n省生活，省出品质生活。";
                                $this->weixin->sendText($recommendMember->openid, $reTxt);
                                Recommends::record(Recommends::$TYPES_KEY[$recommend_type], $recommend_id, $wxFans->member_id);
                                exit;
                            }
                        }
                    }
                }elseif ($category == 'messages'){//消息通知 'messages:merchants_1234' 格式
                    $tmp = explode('_', $qrsceneArray[1]);
                    $type = $tmp[0];
                    $tmpId = $tmp[1];
                    if($type == 'merchants'){//写入数据
                        $res = MerchantsRemind::add($wxFans,$tmpId);
                        CommonFun::log('写入消息通知结果：'.$res,'qrcode','Weixin');
                        if($res){
                            $reTxt = "您已成功绑定消息通知功能。";
                            $this->weixin->sendText($wxFans->openid, $reTxt);
                        }
                        exit;

                    }
                }
                //其它场景，预留
            }

        }

        if($this->content == ''){
            $this->content = '首页';
        }

        if($this->msgType == 'text' && isset($data['Content'])) {
            $this->content = $data['Content'];
        }

        $s = WxKeyWords::searchKeyword($this->content);
        if($s){
            if($s['type'] == 1){ //文本
                $this->weixin->sendText($this->openid, $s['desc']);
                exit;
            }

            if($s['type'] == 2){ //单图文
                $article[] = [
                    'title' => $s['name'],
                    'description' => $s['desc'],
                    'url' => ($s['url'])?$s['url']:'',
                    'picurl' => ($s['pic'])?$this->sysConfig['oss_host'].$s['pic']:''
                ];
                $this->weixin->sendNews($this->openid, $article);
                exit;
            }

            if($s['type'] == 3){
                $items = WxKeyWordsItems::getItmes($s['id']);
                if($items){
                    foreach ($items as $item){
                        $article[] = [
                            'title' => $item['name'],
                            'description' => $item['desc'],
                            'url' => ($item['url'])?$item['url']:'',
                            'picurl' => ($item['pic'])?$this->sysConfig['oss_host'].$item['pic']:''
                        ];
                    }
                    $this->weixin->sendNews($this->openid, $article);
                    exit;
                }
            }
        }

        exit;
    }

}
